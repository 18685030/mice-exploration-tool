@page
@model base64ToImageModel
@{
    //ViewData["Title"] = "base64ToImage";

}

<!DOCTYPE html>
<html>
<head>
    <title>Base64 Image</title>
    <link rel="stylesheet" href="css/base64ToImage.css">

    <!-- include the cornerstone library -->
    <script src="https://unpkg.com/cornerstone-wado-image-loader@3.0.6/dist/cornerstoneWADOImageLoader.min.js"></script>
    <script src="js/cornerstone.min.js"></script>
    <script src="js/cornerstoneMath.min.js"></script>
    <script src="js/cornerstoneTools.min.js"></script>
    <script src="js/dicomParser.min.js"></script>
    <script src="js/cornerstoneWADOImageLoader.js"></script>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>


</head>

<body>

    <div id="header">Image taken from a URL, converted to Base64 and then converted back to an Image.</div>

    <form method="POST">
        <button type="submit" class="btn btn-dark" asp-page="/Index">Home</button>
    </form>



    <img src="https://raw.githubusercontent.com/18685030/DicomTestImages/master/SampleTestImages/mouse.jpeg" alt="Workplace" usemap="#workmap" width="400" height="379">

   
        <map name="workmap">
            <area shape="rect" id="btnGet" coords="34,44,270,350" href="#" alt="body"/>
            <area shape="circle" coords="337,300,44" href="#" alt="paw"/>
        </map>


    <div class="images">
        <!-- Images are placed above this Div to create the grid -->
        <div id="dicomImage"></div>
    </div>



</body>

</html>

<!-- javascript to convert base64 to jpg and jpeg to base64 -->

<script>
// >>>>>>> Part A: Convert image to Base64

    var imageURL = 'https://raw.githubusercontent.com/18685030/DicomTestImages/master/SampleTestImages/mouse.jpeg'

    //The funtion with image link to translate to Base64
    toDataURL(imageURL, function (dataUrl) {
        //document.write('Result in string:', dataUrl)

        var image = new Image();
        //Getting the source from the span.
        //image.src = document.getElementById('source').innerHTML;

        //console.log(dataUrl);
        image.src = dataUrl;
        image.style = "width:400px;height:379px;display:inline-block";
        image.usemap = "#workmap";
        document.body.appendChild(image);
        console.log('base64 image loaded');
    })

    // >>>>>>> Part B: Converts Base64 to image

    //GETs image from location and converts to base64 using 'readAsDataURL' function
    function toDataURL(url, callback) {
        var httpRequest = new XMLHttpRequest();
        httpRequest.onload = function () {
            var fileReader = new FileReader();
            fileReader.onloadend = function () {
                callback(fileReader.result);
            }
            fileReader.readAsDataURL(httpRequest.response);
        };
        httpRequest.open('GET', url);
        httpRequest.responseType = 'blob';
        httpRequest.send();
    }

    cornerstoneWADOImageLoader.external.cornerstone = cornerstone;

    //Array of image addresses. This array could be populated by URLs (to a storage device of DICOMs) from a MySQL query depending on user selection?
    var ImageArray = @Html.Raw(Json.Serialize(ViewData["DICOMArrayList"]));
    //console.log(ImageArray[1]);
    //console.log(ImageArray.length);

    //Forloop through image set and appends image to end of previous image

    for (var i = 0; i < ImageArray.length; i++) {
        console.log("Images", i+1, "of", ImageArray.length, "loaded");
        var imageNum = ImageArray[i];
        let imageId = "wadouri:" + imageNum;

        //Create new div element for each DICOM image and insert it befor the dicomImage div in body
        const imageDiv = document.createElement("div");
        imageDiv.style = "width:20vw; height:20vw; border: thin solid white; display:inline-block";
        var currentDiv = document.getElementById("dicomImage");
        currentDiv.parentNode.insertBefore(imageDiv, currentDiv);
        cornerstone.enable(imageDiv);

        //Load the DICOM image and allow supoprt tools for image zoom and contrast etc
        cornerstone.loadImage(imageId).then(function(image) {
        cornerstone.displayImage(imageDiv, image);
        cornerstoneTools.mouseInput.enable(imageDiv);
        cornerstoneTools.mouseWheelInput.enable(imageDiv);
        cornerstoneTools.wwwc.activate(imageDiv, 1); // ww/wc is the default tool for left mouse button
        cornerstoneTools.pan.activate(imageDiv, 2); // pan is the default tool for middle mouse button
        cornerstoneTools.zoom.activate(imageDiv, 4); // zoom is the default tool for right mouse button
        cornerstoneTools.zoomWheel.activate(imageDiv); // zoom is the default tool for middle mouse wheel
        //cornerstoneTools.imageStats.enable(imageElement);
        //console.log("Images", i, "of", ImageArray.length, "loaded");
        });

    }






    // //Forloop through jpg image set in assets folder and appends image to end of previous image
    // for (var i = 0; i < 3; i++) {
    // var jpgImg = document.createElement("img");
    // jpgImg.style = "width:300px; height:300px";
    // jpgImg.src = "assets/image" + i +".jpg"; //remove jpg if not required
    // document.body.appendChild(jpgImg);
    // }

    //console.log("Page Loaded :)");

</script>

